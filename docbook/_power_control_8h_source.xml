<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__power_control_8h_source" xml:lang="en-US">
<title>PowerControl.h</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Relay&#32;control&#32;of&#32;power&#32;to&#32;DSP&#32;and&#32;amps</emphasis>
2 <emphasis role="comment">//&#32;Includes&#32;input&#32;detection</emphasis>
3 
4 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
5 
6 <emphasis role="preprocessor">#include&#32;&lt;Arduino.h&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;MiniDSP.h&gt;</emphasis>
8 
9 <emphasis role="preprocessor">#define&#32;PIN_DSP_RELAY&#32;10</emphasis>
10 <emphasis role="preprocessor">#define&#32;PIN_AMP_RELAY&#32;11</emphasis>
11 
12 <emphasis role="keyword">extern</emphasis>&#32;MiniDSP&#32;<link linkend="__power_control_8h_1a5c2a8a280a7812e79f5af4eb44610842">ourMiniDSP</link>;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;may&#32;be&#32;better&#32;as&#32;a&#32;pointer&#32;provided&#32;to&#32;the&#32;constructor.</emphasis>
13 
14 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_power_control">PowerControl</link>&#32;{
15 
16 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor</emphasis>
17 &#32;&#32;&#32;&#32;<link linkend="_class_power_control">PowerControl</link>()&#32;{
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_power_control_1a701e6372590bc4bffff3b0b41a165ffa">Init</link>();
19 &#32;&#32;&#32;&#32;}
20 
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
22 
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_power_control_1a3e3c0c21e82a7c2442cc83fca2a002b2">dspOn</link>(<emphasis role="keywordtype">bool</emphasis>&#32;on);
25 
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_power_control_1a6d3a8f36cbfb65afb2876c36bdf70552">ampsOn</link>(<emphasis role="keywordtype">bool</emphasis>&#32;on);
33 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_power_control_1af28576d19abf7f72e5ee291577ad7bab">ampsOn</link>(<emphasis role="keywordtype">bool</emphasis>&#32;on,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;schedule);
42 
43 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//MiniDSP&#32;*&#32;dsp;</emphasis>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_power_control_1a45bc7b03eae0baadcf26d7f79fe382db">ampsOnScheduled</link>;
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_power_control_1adfebc96aa72723ed6de8c139f276cb9f">dspPowerOn</link>;
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_power_control_1a701e6372590bc4bffff3b0b41a165ffa">Init</link>();
49 
50 };
</programlisting></section>
